[
  {
    "Id": "490603",
    "ThreadId": "226448",
    "Html": "<p>Hi,</p>\r\n<p>I was trying to load an SVG created using InkScape. The SVG had a node called &quot;marker&quot;, which is not handled in the current implementation. When SvgElementFactory encounters this node, it returns a null. Here is the relevant portion of code from SvgDocument.cs (in function public static SvgDocument Open(Stream stream, Dictionary&lt;string, string&gt; entities).</p>\r\n<p>&nbsp;</p>\r\n<div style=\"color:black;background-color:white\">\r\n<pre><span style=\"color:blue\">if</span> (elementStack.Count &gt; 0)<br>{<br>   element = SvgElementFactory.CreateElement(reader, svgDocument);<br>}<br><span style=\"color:blue\">else</span><br>{<br>   element = SvgElementFactory.CreateDocument(reader);<br>   svgDocument = (SvgDocument)element;<br>}<br><br><span style=\"color:blue\">if</span> (element == <span style=\"color:blue\">null</span>)<br>{<br>   <span style=\"color:blue\">continue</span>;<br>}<br></pre>\r\n</div>\r\n<p>&nbsp;</p>\r\n<p>As you can see, the loop is skipped&nbsp; and reading continues on the the next node (which could be a child of the unknown / unhandled node type). The better approach would be to skip the node and it's children and move to the next sibling as shown below:</p>\r\n<p>&nbsp;</p>\r\n<div style=\"color:black;background-color:white\">\r\n<pre><span style=\"color:blue\">if</span> (elementStack.Count &gt; 0)<br>{<br>   element = SvgElementFactory.CreateElement(reader, svgDocument);<br>}<br><span style=\"color:blue\">else</span><br>{<br>   Debug.Assert(svgDocument == <span style=\"color:blue\">null</span>);<br>   element = SvgElementFactory.CreateDocument(reader);<br>   svgDocument = (SvgDocument)element;<br>}<br><br><span style=\"color:blue\">if</span> (element == <span style=\"color:blue\">null</span>)<br>{<br>   <span style=\"color:green\">// skip all child nodes of unknown element</span><br>   <span style=\"color:blue\">if</span> (!elementEmpty)<br>   {<br>      Trace.TraceWarning(<span style=\"color:#a31515\">&quot;Unknown/unhandled element type '&quot;</span> + reader.LocalName + <span style=\"color:#a31515\">&quot;' found. Skip child nodes&quot;</span>);<br><br>      <span style=\"color:blue\">int</span> depth = reader.Depth;<br>      reader.ReadStartElement();<br>      <span style=\"color:blue\">while</span> (!reader.EOF &amp;&amp; reader.Depth &gt; depth)<br>      {<br>         reader.Read();<br>      }<br>   }<br><br>   <span style=\"color:blue\">continue</span>;<br>}<br><br></pre>\r\n</div>\r\n<p>&nbsp;</p>\r\n<p>Regards,</p>\r\n<p>- Vikram</p>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>",
    "PostedDate": "2010-09-08T04:25:58-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]